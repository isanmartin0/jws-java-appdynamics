---
apiVersion: "v1"
kind: "Template"
labels: {}
metadata:
  annotations:
    description: "# jws-java-appdynamics\nExtraido de fis-java-appdynamics, modificado\
      \ para monitorizar contenedores de Openshift con Appdynamics\n\n* base build\
      \ for any JWS application requiring appdynamics agents\n\noc new-build https://github.com/isanmartin0/jws-java-appdynamics.git\
      \ --context-dir=src/main/docker --allow-missing-images\n\nSi hiciera falta:\n\
      oc import-image jboss-webserver-3/webserver31-tomcat8-openshift:1.1 --from=registry.access.redhat.com/jboss-webserver-3/webserver31-tomcat8-openshift:1.1\
      \ --confirm\n\noc new-app jws-java-appdynamics\n"
    fabric8.jws-java-appdynamics/iconUrl: "img/icons/java.svg"
  labels: {}
  name: "jws-java-appdynamics"
objects:
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    annotations: {}
    labels:
      app: "jws-java-appdynamics"
      project: "jws-java-appdynamics"
      version: "1.0.0-SNAPSHOT"
      group: "openshift"
    name: "jws-java-appdynamics"
  spec:
    dockerImageRepository: ""
    tags: []
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    annotations: {}
    labels:
      app: "jws-java-appdynamics"
      project: "jws-java-appdynamics"
      version: "1.0.0-SNAPSHOT"
      group: "openshift"
    name: "jws-java-appdynamics"
  spec:
    output:
      to:
        kind: "ImageStreamTag"
        name: "jws-java-appdynamics:1.1"
    source:
      contextDir: "src/main/docker"
      git:
        uri: "https://github.com/isanmartin0/jws-java-appdynamics"
      images: []
      secrets: []
      type: "Git"
    strategy:
      dockerStrategy:
        env: []
        from:
          kind: "ImageStreamTag"
          name: "webserver31-tomcat8-openshift:1.1"
          namespace: "openshift"
      type: "Docker"
    triggers:
    - imageChange:
        from:
          kind: "ImageStreamTag"
          name: "webserver31-tomcat8-openshift:1.1"
          namespace: "openshift"
      type: "ImageChange"
parameters: []
